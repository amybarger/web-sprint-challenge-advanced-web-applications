{"ast":null,"code":"var _jsxFileName = \"/Users/amydavis/Lambda-School/WEBPT16/web-sprint-challenge-advanced-web-applications/client/src/components/BubblePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport Bubbles from \"./Bubbles\";\nimport ColorList from \"./ColorList\";\n\nconst BubblePage = () => {\n  const [colorList, setColorList] = useState([]);\n  const [refresh, setRefresh] = useState(true); // fetch your colors data from the server when the component mounts\n  // set that data to the colorList state property\n\n  useEffect(() => {\n    if (refresh) {\n      axiosWithAuth().get(\"/api/colors\").then(res => setColorList(res.data)).catch(err => console.log(err)).finally(() => setRefresh(false));\n    }\n  }, [refresh]);\n  console.log(\"colorList state available\", colorList);\n  return React.createElement(React.Fragment, null, React.createElement(ColorList, {\n    colors: colorList,\n    updateColors: setColorList,\n    setRefresh: setRefresh,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Bubbles, {\n    colors: colorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nexport default BubblePage;","map":{"version":3,"sources":["/Users/amydavis/Lambda-School/WEBPT16/web-sprint-challenge-advanced-web-applications/client/src/components/BubblePage.js"],"names":["React","useState","useEffect","axiosWithAuth","Bubbles","ColorList","BubblePage","colorList","setColorList","refresh","setRefresh","get","then","res","data","catch","err","console","log","finally"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC,CAFuB,CAGvB;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,OAAJ,EAAa;AAGbN,MAAAA,aAAa,GACRQ,GADL,CACS,aADT,EAEKC,IAFL,CAEUC,GAAG,IAAIL,YAAY,CAACK,GAAG,CAACC,IAAL,CAF7B,EAGKC,KAHL,CAGWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHlB,EAIKG,OAJL,CAIa,MAAMT,UAAU,CAAC,KAAD,CAJ7B;AAKH;AAAC,GATS,EASP,CAACD,OAAD,CATO,CAAT;AAWFQ,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCX,SAAzC;AAEE,SACE,0CACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEA,SAAnB;AAA8B,IAAA,YAAY,EAAEC,YAA5C;AAA0D,IAAA,UAAU,EAAEE,UAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEH,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAxBD;;AA0BA,eAAeD,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../utils/axiosWithAuth'\n\nimport Bubbles from \"./Bubbles\";\nimport ColorList from \"./ColorList\";\n\nconst BubblePage = () => {\n  const [colorList, setColorList] = useState([]);\n  const [refresh, setRefresh] = useState(true);\n  // fetch your colors data from the server when the component mounts\n  // set that data to the colorList state property\n  useEffect(() => {\n    if (refresh) {\n\n\n    axiosWithAuth()\n        .get(\"/api/colors\")\n        .then(res => setColorList(res.data))\n        .catch(err => console.log(err))\n        .finally(() => setRefresh(false))\n}}, [refresh])\n\nconsole.log(\"colorList state available\", colorList)\n\n  return (\n    <>\n      <ColorList colors={colorList} updateColors={setColorList} setRefresh={setRefresh} />\n      <Bubbles colors={colorList} />\n    </>\n  );\n};\n\nexport default BubblePage;\n"]},"metadata":{},"sourceType":"module"}